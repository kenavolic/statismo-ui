// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "StatismoUI.h"

#include <iostream>
#include "itkMesh.h"
#include "itkStatismoIO.h"
#include "itkStandardMeshRepresenter.h"
#include "itkStatisticalModel.h"
#include "itkImage.h"
#include "itkImageFileReader.h"


int main(int argc, char **argv) {

    StatismoUI::StatismoUI ui;
    StatismoUI::Group g = ui.createGroup("a newly created group");


    typedef itk::Mesh<float, 3> MeshType;
  typedef itk::Image<short, 3> ImageType;

  typedef itk::StandardMeshRepresenter<float, 3> RepresenterType;
  typedef itk::StatisticalModel<MeshType> StatisticalModelType;

  RepresenterType::Pointer representer = RepresenterType::New();
  itk::StatisticalModel<MeshType>::Pointer model = itk::StatismoIO<MeshType>::LoadStatisticalModel(representer, "/tmp/facemodel.h5");

//  MeshType::Pointer meanMesh = model->DrawSample();
//
//    StatismoUI::TriangleMeshView tv = ui.showTriangleMesh(g, meanMesh, "a mesh");
//    tv.SetColor(StatismoUI::Color(1.0, 1.0, 255.0)).SetOpacity(0.8).SetLineWidth(5);
//    ui.updateTriangleMeshView(tv);
//
//    itk::ImageFileReader<ImageType>::Pointer reader = itk::ImageFileReader<ImageType>::New();
//    reader->SetFileName("/tmp/vsd-0.nii");
//    reader->Update();
//    ImageType::Pointer img = reader->GetOutput();
//    StatismoUI::ImageView imageView = ui.showImage(g, img, "an imag");
//    imageView.SetWindow(1115).SetLevel(1200).SetOpacity(0.5);
//
//    ui.updateImageView(imageView);
//

  StatismoUI::ShapeModelView ssmView = ui.showStatisticalShapeModel(g, model, "aModel");

  vnl_vector<float> newCoeffs(ssmView.GetShapeModelTransformationView().GetShapeTransformation().GetCoefficients());
  for (unsigned i = 0; i < newCoeffs.size(); ++i) {
    newCoeffs[i] += 1;
  }
  itk::Euler3DTransform<float>::Pointer euler = itk::Euler3DTransform<float>::New();
  euler->SetIdentity();
    itk::Point<float> p;
    p.SetElement(0, 10); p.SetElement(1, 5); p.SetElement(2, 55);
  euler->SetCenter(p);
  //  euler->SetRotation(0.1, 0.1, 0.3);
  itk::Vector<float> t(3); t[0] = 0; t[1] = 0; t[2] = 0;	
    euler->SetRotation(0 , 0, 1.5);
  euler->SetTranslation(t);
  StatismoUI::ShapeModelTransformationView nv = ssmView.GetShapeModelTransformationView();

    nv.SetPoseTransformation(StatismoUI::PoseTransformation(euler)).SetShapeTransformation(StatismoUI::ShapeTransformation(newCoeffs));

    ui.updateShapeModelTransformationView(nv);

    StatismoUI::TriangleMeshView tmv = ssmView.GetTriangleMeshView();
    tmv.SetColor(StatismoUI::Color(255, 0, 0));
    ui.updateTriangleMeshView(tmv);


  return 0;
}
